# -*- coding: utf-8 -*-
"""coding365 python part A.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17N0TNnLUek0XKJqYORjpRPygmXBVEMK3
"""

a = input()#3
b = input()#5

sum = int(a)+int(b)

print(sum)

a = input()#3
b = input()#5

turn1 = int(a)
turn2 = int(b)

b = turn1
a = turn2

print(a,b)#5 3

print(r'hello\nworld')
print(r'hello\\nworld')

student_name = "Laisan"
school = "NTUT"
student_id = 101419008
print(student_name.title())
print(student_name.upper())
print(student_name.lower())
print(len(student_name))
print(school+" "+student_name)
print(school+student_name)
print(school+" "+str(student_id)+" "+student_name)

fruits=["apple","banana","grape","pineapple"]
print(fruits)

fruits=["apple","banana","grape","pineapple"]
print(fruits[0])

fruits=["apple","banana","grape","pineapple"]
print(fruits[-2])

n = "Laisan"
s = "Hello, " + n
print(s)

fruits=["apple","banana","grape","pineapple"]
fruits.append("mango")
print(fruits)

s = "Hello World"

print(s.split())
print(s.find('World'))
print(s.replace("World",'Python'))

print(s.lower())
print(s.upper())
print(s.isdigit())
print(s.isnumeric())
print(s.isalpha())

s = 'This company is not poor at all.'

s1 = s.replace("not poor at all.","good")

s = s1

print(s)#This company is good

s = 'This company is not poor at all.'

s1 = s.replace(s[16:],"good")

s = s1

print(s) #This company is good

q = 'This company is not poor at all.'
y = 'good'
h = str.split(y)
g = str.split(q)

te = g.remove('not')
ta = g.remove('at')
to = g.remove('all.')
ti = g.extend(h)


q = (' '.join(g))
print(q) #This company is good

L = [1,3,1,2,2,4,5,3]

A = set(L)

C = sorted(A,reverse=True)

L = C

print(L)#[5,4,3,2,1]

we = int(input("kg:"))

if we <=5:
  print('It is 50 ')
elif we >5 and we <10:
  print('It is 70 ')
elif we >10 and we <15:
  print('It is 90')
elif we >15 and we <20:
  print('It is 110')
elif we > 20:
  print('We can not deny')

number = 0
sum = 0

for i in range(1,10):
  for j in range(1,10):
    number = i + 1
    sum = i*j
    print('{}x{}={}'.format(i,j,sum),end=' ')
  print('')

Y = [1,3,1,2,2,4,5,3]
def op(R):
  d={}
  R2=[]
  for i in R:
    d[i] = d.get(i,0) + 1
    if d[i]>1 and i not in R2:
      R2.append(i)
  return R2
print(op(Y))#[1,2,3]

Y = [1,3,1,2,2,4,5,3]

a = {}
for z in Y:
  if Y.count(z)>1:
    a[z] = Y.count(z)
print(a)

#{1: 2, 2: 2, 3: 2}

new = []
numbers = []
numbers_name = ""
sum_number = 0

while numbers_name != "quit":
  numbers_name = input("Enter the numbers which you want to sum or just Enter quit : ")
  if numbers_name != "quit":
    numbers.append(numbers_name)
  elif numbers_name == "quit":
    for f in numbers:
      new.append(int(f));
    for jk in new:
      sum_number += jk;
    break
print("The sum is : %d"%sum_number)

alphbats_lower = {"a":0,"b":0,"c":0,"d":0,"e":0,"f":0,"g":0,"h":0,"i":0,"j":0,"k":0,"l":0,"m":0,"n":0,"o":0,"p":0,"q":0,"r":0,"s":0,"t":0,"u":0,"v":0,"w":0,"x":0,"y":0,"z":0,"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0}
c ={}
s = input("the words: ")
s = s.lower()
for c in s:
  if c.isdigit() == True or c.isalpha() == True :
    alphbats_lower[c] = alphbats_lower[c] + 1
  else:
    alphbats_lower[c] = 1
print(alphbats_lower)

def what(num):
  ans = True
  x = str(num)
  s = set(x)
  for c in s:
    if c == "0":
      ans = False
      break
    elif num % int(c) !=0:
      ans = False
      break
  return ans

sta = input("開始值: ")
stp = input("結束值: ")

if sta.isdigit() == False or stp.isdigit() == False:
  print("請輸入有效數值")
else:
  print("從 " + sta + "到 " + stp + "之間的餘數有:")
  the_list = []
  for val in range(int(sta), int(stp)+1):
      if what(val) == True:
        the_list.append(val)
v1 = 0
v2 = 0
md = 0
for wr in range(0, len(the_list)-1):
  if the_list[wr+1] - the_list[wr] > md:
    v1 = the_list[wr]
    v2 = the_list[wr+1]
    md = the_list[wr+1] - the_list[wr]
print(v1 , v2 , md)

def ck(lp):
  if lp == 0 or lp == 1:
    return 1
  else:
    return lp*ck(lp-1)
print(ck(5))

def fu(*wow):
  ml = list()
  for x in wow:
    ml.append(x+1)
  return ml

def my(f):
  for t in range(2,f):
      if f % t == 0:
        print("不是質數")
        break
      elif t == f-1:
        print("是質數")
  if f == 0 :
    print("他是0")
  elif f == 1:
    print("他是1")
  elif f == 2:
    print("他是2,是質數")

def fu2(*mt):
  ml = list()
  for x in mt:
    ml.append(my(x)) 

def map(erer, *y):
  print(erer(*y))

map(fu,100,200,300,400,500)
map(fu2,111,123,3434,5454,2423,432451)

movielist = ["The Shawshank Redemption",
             "The Godfather",
             "the Dark Knight"]
f = open("movielist","w")
print(movielist, file = f)
f.close()